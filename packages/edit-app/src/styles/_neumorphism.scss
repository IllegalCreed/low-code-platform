@use 'colors';
@use 'sass:math';
@use 'sass:color';
@use 'sass:meta';

@mixin neumorphism-outer-shadow($deep) {
  box-shadow:
    #{$deep} #{$deep} #{$deep * 2} rgba(black, var(--shadow-outer-dark)),
    -#{$deep} -#{$deep} #{$deep * 2} rgba(white, var(--shadow-outer-light));
}

@mixin neumorphism-inner-shadow($deep) {
  box-shadow:
    inset #{$deep} #{$deep} #{$deep * 2} rgba(black, var(--shadow-inner-dark)),
    inset -#{$deep} -#{$deep} #{$deep * 2} rgba(white, var(--shadow-inner-light));
}

@function generate-dark-light-bg($bg) {
  $dark-bg: null;
  $light-bg: null;
  @if meta.type-of($bg) == 'color' {
    // 如果 $bg 是颜色值
    $dark-bg: darken($bg, 10%);
    $light-bg: lighten($bg, 7%);
  } @else {
    // 如果 $bg 是 CSS 变量
    $dark-bg: var(--page-background-color-darken);
    $light-bg: var(--page-background-color-lighten);
  }
  @return ($dark-bg, $light-bg);
}

@mixin neumorphism-flat($deep, $bg: var(--page-background-color)) {
  background-color: $bg;
  @include neumorphism-outer-shadow($deep);
}

@mixin neumorphism-concave($deep, $bg: var(--page-background-color)) {
  $colors: generate-dark-light-bg($bg);
  $dark-bg: nth($colors, 1);
  $light-bg: nth($colors, 2);

  background-image: linear-gradient(to bottom right, $dark-bg, $light-bg);
  // background-image: radial-gradient(circle at top left, $dark-bg, $light-bg);
  @include neumorphism-outer-shadow($deep);
}

@mixin neumorphism-convex($deep, $bg: var(--page-background-color)) {
  $colors: generate-dark-light-bg($bg);
  $dark-bg: nth($colors, 1);
  $light-bg: nth($colors, 2);

  background-image: linear-gradient(to bottom right, $light-bg, $dark-bg);
  // background-image: radial-gradient(circle at top left, $light-bg, $dark-bg);
  @include neumorphism-outer-shadow($deep);
}

@mixin neumorphism-pressed($deep, $bg: var(--page-background-color)) {
  background-color: $bg;
  @include neumorphism-inner-shadow($deep);
}

@mixin neumorphism-glass-shadow(
  $deep,
  $blur: 0.5rem,
  $alpha: 0.8,
  $bg: var(--page-background-color)
) {
  $halfdeep: math.div($deep, 2);

  backdrop-filter: blur($blur);
  background: rgba($bg, $alpha);
  box-shadow:
    #{$deep} #{$deep} #{$deep * 2} rgba(black, var(--shadow-outer-dark)),
    -#{$deep} -#{$deep} #{$deep * 2} rgba(white, var(--shadow-outer-light)),
    inset #{$halfdeep} #{$halfdeep} #{$halfdeep * 2} rgba(black, var(--shadow-inner-dark)),
    inset -#{$halfdeep} -#{$halfdeep} #{$halfdeep * 2} rgba(white, var(--shadow-inner-light));
}

@mixin neumorphism-btn($deep, $bg: var(--page-background-color)) {
  @apply cursor-pointer select-none;
  @include neumorphism-flat($deep, $bg);

  &:hover {
    @include neumorphism-convex($deep, $bg);
  }

  &:active {
    @include neumorphism-concave($deep, $bg);
  }
}

@mixin neumorphism-switch($deep) {
  @apply cursor-pointer select-none;
  @include neumorphism-inner-shadow($deep);
}

@mixin neumorphism-card($deep, $bg: var(--page-background-color)) {
  background-color: $bg;
  @apply border-1 border-solid;
  border-color: var(--border-color);

  $halfdeep: math.div($deep, 2);
  box-shadow: 0 0 #{$deep * 2} #{$halfdeep} rgba(black, var(--shadow-outer-dark));
}
